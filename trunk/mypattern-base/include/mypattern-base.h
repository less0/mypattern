#ifndef MYPATTERN_BASE_H
#define MYPATTERN_BASE_H

#include "measurevalue.h"
#include "beziercomplex.h"
#include "mypattern-base.h"
#include "patternparameter.h"
#include "patternerror.h"
#include "measures.h"
#include "objecttype.h"
#include "patternparametervalue.h"
#include "part.h"
#include "errorcode.h"
#include "patterntype.h"
#include "partdefinition.h"
#include "valuerangetype.h"
#include "patternobject.h"
#include "evaluation/landmarkevaluationtreenode.h"
#include "evaluation/evaluationtreeobserver.h"
#include "evaluation/evaluationtreenode.h"
#include "evaluation/evaluationroot.h"
#include "evaluation/formula/differenceterm.h"
#include "evaluation/formula/quotientterm.h"
#include "evaluation/formula/constantterm.h"
#include "evaluation/formula/productterm.h"
#include "evaluation/formula/scalarterm.h"
#include "evaluation/formula/sumterm.h"
#include "evaluation/formula/term.h"
#include "bezier.h"
#include "intpatternparameter.h"
#include "curvedefinition.h"
#include "floatpatternparameter.h"
#include "bezierdefinition.h"
#include "pattern.h"
#include "point.h"
#include "constants.h"
#include "exceptions/formulaevaluationexception.h"
#include "exceptions/unmetdependenciesevaluationexception.h"
#include "exceptions/evaluationexception.h"
#include "exceptions/objectnametakenevaluationexception.h"
#include "exceptions/circulardependencyevaluationexception.h"
#include "exceptions/argumentnullexception.h"
#include "exceptions/exception.h"
#include "drawoptions.h"
#include "user.h"
#include "patterndefinition.h"
#include "landmark.h"

#endif
